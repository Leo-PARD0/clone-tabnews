Dia 2
Aula 2, aulas não listadas

AULA EXTRA - AMBIENTE WINDOWS
Docker - Gerenciador de "containers", que são "ambientes seguros" para rodar o programa de maneira isolada
Docker é linux e linux precisa de linux, logo virtualização, ou seja, máquina virtual.
hyper-v e wsl são maneiras de virtualização, onde hyper-v simula um OS inteiro, enquanto o wsl apenas o kernel


Dia 3
Nodejs - lts/hydrogen

SE VOCÊ QUER FAZER UMA TORTA DE MAÇÃ DO ZERO, VOCÊ DEVE PRIMEIRO CRIAR O UNIVERSO.

Dia 4
Protocolos, Meios de comunicação entre duas ou mais partes. Acordos:

Http - Hyper text transfer, indexação de vários textos diferentes e a transferencia entre as partes
FTP - File transfer, transferencia de arquivos
SMtp - Simple mail, transferencia de emails
IP - Protocolo da internet
TCP - confere se há erros entre a transferencia
Udp - Não há conferencia de erros, há interpolação quando falta dados

Next - File Base Routing
Criação de páginas baseada em arquivos. Necessita de arquivos contendo a sustancia da página
Popularizado pelo PHP

Git - GitHub - Deploy - DNS

Dia 5 e 6

Git = Controle de versionamento de código

Processo do git:
    Faz alteração
    Git status
    git add " #nome do bagui "
    git commit
    git push

Processo de correção do commit:
    Git log
    Git log --oneline
    Git status
    Git diff
    git commit --amend

Dia 7

Aprender a usar ferramentas para entregar um projeto até o final
Gerar um impacto em alguém
Experência prazerosa

Cliente é quem pede
Servidor é quem serve
Servidor e cliente podem trocar de lado.
Quando um server pede ele se torna client
Sempre será uma relação entre um client que pede algo usando um protocolo e um server que serve algo usando esse protocolo.

hospedagem de site oferecem abrigo para os arquivos do seu site

DEPLOY - Depositar - é passar os arquivos para o servidor que hospeda o site
antigamente usado em FTP
mas isso era demorado e atrapalhava. As vezes editavam diretamente do servidor

Agora é enviado o projeto para um CI para testes E depois para um build e depois para o servidor --- Fluxo de deploy

Vercel está instalado como extensão no github na parte de configuração de app

Dia 9
Organização
Níveis
    1 - Ser lembrado individualmente. 
    Lembrar o que precisamos fazer para não fazermos, cada vez mais, outras coisas.
        Menor custo de produção - Energia
        Menor Tempo de aquecimento - Tempo para conferir o que precisa ser feito
        Folhas de papel escrito com o que precisa, para não ter tempo de carregamento
    2 - Ser lembrado em grupo
        Todos da equipe devem ver o processo e o que falta para concluir
        Marcar progresso
    3 - Expandir conhecimento
    Conversar e desenvolver de forma detalhada
        Trello / Github 
        O conhecimento não sai de graça e o aquecimento não é instantaneo
    4 - Gerar métricas
    Conseguir mensurar produtividade
        Aumenta o custo de executar cada tarefas
        Jira - Mensura as tarefas
    
O saldo de não fazer nada é sempre positivo
        NÃO NEGOCIE O TUDO OU NADA COM TERRORISTAS
        TRABALHAR POUCO E GANHAR POUCO

Issue de inceptions
    Issue serve para dar nota a algo

Diminua a pedra até que consiga engolir

Grandes pedras - Milestones
Pequenas pedras - Issues

Dinamica da dopamina
1 estagio - identificar algo positivo futuro - inclusive muda o sentido do pensamento  
2 estagio - Progresso
3 estagio - Conclusão -  A carga final da dopamina que te dá a memória de que isso foi bom

Dia 10
Estilização do código é essencial.
Sem estilização padronizada, no momento do merge as coisas ficam confusas

Se o foco aumenta a probabilidade de desistencia diminue

.editorconfig, você pode fazer 1 diferente por pasta. O .editorconfig root é o último.

Dia 11
DNS - Principal porta de entrada para sites e serviços

Domínios são uma mentira - Endereços são apelidos
Endereços de verdade são IP
Cada ponto de conexão tem um ip único
O servidor também possue um ip único
Toda vez que o computador transfere pacotes pela internet - É carimbado o endereço de destino

Um computador não se conecta por endereços online, mas sim com o ip do servidor
DNS - Domain Name System

Endereço vai pro dns, vira um ip e no volta para o computador e depois vai para o servidor
Domínios são os nomes no contato telefonico

Para descobrir o IP do domínio é só pingar aquele dominio

Dia 11 nv2
Processo real do acesso a sites:
Sem saber nada é impossível descobrir o endereço de ip de um site. Porém dá para descobrir sabendo muito POUCO
Não existe um banco de dados central com todos os ips e domínios. O DNS serve para descentralização para que, quando a internet caia em algum lugar, não caia em todos.

É necessário achar os rootservers que são 13 no total, mas no momento tem mais de 1000 instancias para garantir a redundancia da operação
Redundancia é bom para ter certeza da execução do serviço.

Computador --x--> site
           ip - fail
Root Server <---- Recursive Resolver <----- PC -----> IP

Root server não sabe o ip do domínio. Ele sabe ler o endereço ao contrário, assim ele checa o responsável por aquele tipo de domínio. Assim funciona a hierarquia.
Domínios .com.br na verdade são .com.br. com um ponto no final - FQDN (Fully Qualified Domain Name)
. - root domain
.br - TLD top level domain

Os root servers sabem onde estão os TLDs

ccTLD - country code top-level domains - Reservado para paises
gTLD - Generic top-level domains - São os genéricos, como o .com - "com" vem de comercial

O computador requisita o ip do dominio para o recursive resolver (que é do provedor de internet) - O Recursive Resolver requisita para o Root Server. 
O root server não sabe o ip do domínio, mas sabe o ip de quem é responsável por esse tipo de domínios. Então retorna o ip do TLD ao recursive resolver.
O recursive resolver entra em contato com o servidor do tld, exemplo o .br, perguntando o ip final. O servidor não sabe, mas ele sabe onde fica o servidor que guarda as informações
Então ele responde com o ip do authoritative server, que é o responsável pelas informações desse domínio. Que devolve o ip pro recursive resolver. Que devolve pro PC.

TTL - Time to live, define quanto tempo um registro deve ser mantido em cash. Assim, quando você está acessando um site, você não precisa requisitar constantemente o ip para cada "área" diferente que vocÊ acessa

Dia 12
Registro de dominio. Para colocar seu domínio no banco de dados do TLD ele precisa ser registrado por um orgão Registrary.
O responsável pelo registro .br é o Registro.br. Mas existem outros credenciados.
O banco de dados dos registros .br está em nic.br que é o registrary.

Chorinho de conteúdo sobre servidor DNS
Authoritative server - Authoritative NameServer
Vercel registra automaticamete o DNS.
sudo - executar como amend
apt - advance packed tool

GeoDNS - responde request de dns com ip mais proximo de quem está fazendo o request
Cada região do mundo irá responder um A record diferente e próximo do original segundo sua localização
DNS não propaga. A informação não é empurrada para o mundo, o mundo que busca a informação

Dia 13
Ideia MC Donalds - Sugira algo bizarro sem compromisso algum pra ser negado
Seu cerebro vai sentir inspiração em criar novas ideias só para se afastar da ideia ruim inicial
Isso é a TEORIA MC DONALD's

Não existe 100% de uptime. A maioria dos serviços se compremetem a entregar 99.9% de uptime
O que significa que podem ficar fora do ar por 9h por ano.

SLA - Service Level Agreement - Acordo de nivel de serviço

Status pages - páginas que verificam o status de funcionamento de servíços online
Consultar sempre primeiro a página de status dos serviços que você usa.

Dia 14
Algo que nasce complexo permanece complexo
Overengenieer - excesso de engenharia
Programar algo simples sempre dá para complexificar
Programar algo complexo sempre irá permanecer complexo

O mundo já é complexo por natureza. Atingir a simplicidade bem feita do projeto é mais difícil

Arquitetura de software diferente de organização de pastas

É possível criar arquiteturas com todos os arquivos na mesma pasta ou até todos os códigos no mesmo arquivo

Separar códigos em arquivos e organizar em pastas não define arquitetura de software
Arquitetura de sofrteware é definido pelo escopo dos compontentes e a interação entre eles

Arquitetura simples com ótima modelagem faz você ir longe

Aula bonus
PoC - Proof of Concept
MVP - Minimum viable Product

Ajudam a descobrir o melhor angulo do projeto.

O mínimo viável do produto tem que ser capaz de entregar a solução pro problema, mas ele não pode tentar resolver vários problemas ao mesmo tempo.
Um MVP normalmente passou por várias PoCs para poder ser concebido.

Dia 15
Testes Automatizados
tiram o peso de mexer em sistema funcionando
ajudam a verificar que uma parte do sistema continua funcionando da forma esperada.
TestRunner - Código que excuta outros códogos
Para cada trecho que o sistema se encontra o test runner testa
Evita criar programas que geram uma regressão.
É esperado que um test runner retorne um erro e um relatório.

Existem 2 modos de programar, ou você cria o código e após isso cria o teste para ver se está
tudo funcionando conforme esperado. A segunda forma é TDD

TDD - Test Driven Development - Desnvolvimento Orientado a Testes
imaginar situações onde seu código vai ter reações espereadas e depois programar as funcionalidades do código.

Dia 16
Existem 2 tipos de testes - Testes de unidade e testes de integração
Unidade são todos os módulos e funcionalidades do seu sistema
Unidades de sistema são mutáveis. Seja por reagir diferente pela integração com outro módulo ou por alguma modificação feita por algum dev.
Quando há mudança, uma unidade pode acabar passando um valor que outra unidade não está esperando, o que pode gerar uma reação em cadeia de erros.
Garantir o funcionamento da unidade e da integração
É possível garantir que 100% da unidade está funcionando, mas isso não significa que o sistema vai funcionar.
Quanto mais do sistema de verdade esta rodando, maior a confiailidade na cobertura do teste

Quanto mais garantia que o sistema está funcionando, mais demora para fazer os testes
Testes E2E precisam levantar toda a infraestrutura para funcionarem.
Quando é necessário concertar um erro inesperado de maneira emergencial testes E2E não são eficientes

hierarquia:piramide de testes
Unidade             Rápido
integração            !
End to End - E2E    Devagar

usuario @swyx - " Testes de integração > Unidade é a nova convenção

FrontEnd - Trófeu de testes
BackEnd - Testes de Favo de Mel

e2e
INTEGRATION
INTEGRATION
INTEGRATION
unit
static
static

integrated
integrated
INTEGRATION
INTEGRATION
INTEGRATION
implementeation detail
inplementation detail

Grande confusão - definir a divisão entre unidade e intrgração
A definição está em quem desenvolver

Alternativa, definir apenas entre testes rápidos e Devagar

API first, disponibilizar funcionalidades primeiro em API

usuário @rauchg - Guilhermmo Rauch - "A palavra 'unidade' já não é um bom começo para mim. Os seus clientes são confrontados diariamente com sistemas complexos que resultam da integração de milhares de unidades. Testando a abstração interna vesus testando o que os clientes usam.

Protocolo http
Cookies
Cabeçalhos
Status Codes

Endpoint - ponto final que uma requisição vai chegar. Na prática qualquer endereço na internet é um Endpoint
Endereço de uma API - Application Programming Interface
Interface - Tudo é uma interface. As bordas do seu sistema. A falta dela faz com seus sistemas tenham códigos macarronicos, voce não sabe quando começa e quando termina
Cada interface serve para um público alvo diferente

Quanto mais programável a interface, melhor para programas
Quanto mais layout, mais util para humanos
API descarta a necessidade de layout para poder implementar as mudanças do programa em outros projetos.

TUI - Text-Based User Interface
GUI - Graphical User Interfae

Se clients de diferentes lugares conversarem por http eles vão conseguir trocar informações

API - Interface de programação das aplicações

Pegar as informações por api dá a capacidade de criar alterações de layout que permitirá melhorar a experiencia humana sem quebar a interação entre unidades

Para testar a api precisa ter no mínimo 1 Endpoint
/status, quando chamado vai devolver a saudde do sistema.
Endpoints usam File-based Routing

request - o que entra do mundo de fora
response - que vai ser respondido

charset - character set - tipo de teclado

Curl - Client URL
http://localost:3000/api/status

http
  * - o que o curl está fazendo internamente
  > o que foi enviado para o servidor
  < Resposta do servidor

Interface Web tende a mudar muito mais que uma API
Mas api tbm pode mudar ao longo do tempo

breaking change e non-braking change
breaking change - mudanças que quebram interações
non-breaking change - não quebra a integração.

URI Path version - No próprio caminho é selecionado qual versão da api
HEAER VERSIONING - Cabeçalho customisado na request para indicar a versão que vai ser utilizada.

No protocolo http sempre precisa se expolicar um metodo, qu é a ação que você quer fazer contra o servidor

get-Pegar
post-postar

